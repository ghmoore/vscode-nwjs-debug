{
  "name": "vsc-nwjs",
  "displayName": "Debugger for NWjs",
  "version": "0.0.18",
  "icon": "img/logo.png",
  "description": "NWjs Debugger",
  "author": {
    "name": "ruakr"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/karikera/vscode-nwjs-debug"
  },
  "publisher": "ruakr",
  "bugs": "https://github.com/karikera/vscode-nwjs-debug/issues",
  "engines": {
    "vscode": "^1.8.0"
  },
  "categories": [
    "Debuggers"
  ],
  "license": "UNLICENSED",
  "dependencies": {
    "vscode": "^1.0.3",
    "vscode-chrome-debug-core": "3.12.8",
    "vscode-debugadapter": "^1.16.0-pre.1",
    "vscode-debugprotocol": "^1.16.0-pre.1",
    "archiver": "^1.3.0",
    "co": "^4.6.0",
    "extract-zip": "^1.6.0",
    "figures": "^1.4.0",
    "glob-all": "^3.1.0",
    "nwjs-versions": "0.0.3",
    "pget": "0.0.0",
    "pify": "^2.3.0",
    "shelljs": "^0.6.0",
    "user-home": "^2.0.0"
  },
  "devDependencies": {
    "typescript": "^2.2.0",
    "eslint": "^3.15.0",
    "@types/node": "^6.0.63"
  },
  "main": "./js/command",
  "activationEvents": [
    "onCommand:vscode-nwjs.install",
    "onCommand:vscode-nwjs.remove",
    "onCommand:vscode-nwjs.publish",
    "onCommand:vscode-nwjs.compile"
  ],
  "contributes": {
    "breakpoints": [
      {
        "language": "javascript"
      },
      {
        "language": "typescriptreact"
      },
      {
        "language": "javascriptreact"
      },
      {
        "language": "fsharp"
      }
    ],
    "commands": [
      {
        "command": "vscode-nwjs.install",
        "title": "NWjs Install"
      },
      {
        "command": "vscode-nwjs.remove",
        "title": "NWjs Remove"
      },
      {
        "command": "vscode-nwjs.publish",
        "title": "NWjs Publish"
      },
      {
        "command": "vscode-nwjs.compile",
        "title": "NWjs Compile"
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "package.json",
        "url": "./schema/package.schema.json"
      },
      {
        "fileMatch": "nwjs.publish.json",
        "url": "./schema/nwjs.publish.schema.json"
      }
    ],
    "debuggers": [
      {
        "type": "nwjs",
        "label": "NWjs",
        "program": "./js/debugger/chromeDebug.js",
        "runtime": "node",
        "aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
        "initialConfigurations": [
          {
            "type": "nwjs",
            "request": "launch",
            "name": "Launch NWJS",
            "webRoot": "${workspaceRoot}",
            "nwjsVersion": "any"
          },
          {
            "type": "nwjs",
            "request": "attach",
            "name": "Attach to Chrome",
            "port": 9222,
            "webRoot": "${workspaceRoot}",
            "nwjsVersion": "any"
          }
        ],
        "configurationSnippets": [
          {
						"label": "NWjs: Launch",
						"description": "Launch NWjs to debug",
						"body": {
							"type": "nwjs",
							"request": "launch",
							"name": "${2:Launch NWjs}",
							"webRoot": "^\"\\${workspaceRoot}\"",
                            "nwjsVersion": "any"
            }
          },
          {
						"label": "NWjs: Launch with userDataDir",
						"description": "Launch NWjs with a separate userDataDir, useful when another instance is already running",
						"body": {
							"type": "nwjs",
							"request": "launch",
							"name": "${2:Launch NWjs}",
							"webRoot": "^\"\\${workspaceRoot}\"",
              "userDataDir": "^\"\\${workspaceRoot}/.vscode/nwjs\"",
                            "nwjsVersion": "any"
						}
					}
        ],
        "configurationAttributes": {
          "launch": {
            "required": [],
            "properties": {
              "port": {
                "type": "number",
                "description": "Port to use for NWJS remote debugging.",
                "default": 9222
              },
              "webRoot": {
                "type": "string",
                "description": "This specifies the workspace absolute path to the webserver root. Shorthand for a pathMapping for \"/\"",
                "default": "${workspaceRoot}"
              },
              "nwjsVersion": {
                "type": "string",
                "description": "Using NWjs version",
                "default": "any"
              },
              "pathMapping": {
                "type": "object",
                "description": "A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk",
                "default": { "/": "${workspaceRoot}" }
              },
              "runtimeExecutable": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Workspace absolute path to the runtime executable to be used. If not specified, Chrome will be used from the default install location.",
                "default": null
              },
              "runtimeArgs": {
                "type": "array",
                "description": "Optional arguments passed to the runtime executable.",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "sourceMaps": {
                "type": "boolean",
                "description": "Use JavaScript source maps (if they exist).",
                "default": true
              },
              "diagnosticLogging": {
                "type": "boolean",
                "description": "When true, the adapter logs its own diagnostic info to the console in a human readable format",
                "default": true
              },
              "verboseDiagnosticLogging": {
                "type": "boolean",
                "description": "When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')",
                "default": true
              },
              "userDataDir": {
                "type": "string",
                "description": "When set, Chrome is launched with the --user-data-dir option set to this path",
                "default": ""
              },
              "sourceMapPathOverrides": {
                "type": "object",
                "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.",
                "default": {}
              },
              "smartStep": {
                "type": "boolean",
                "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                "default": true
              },
              "skipFiles": {
                "type": "array",
                "description": "An array of file or folder names, or path globs, to skip when debugging.",
                "default": []
              }
            }
          },
          "attach": {
            "required": [
              "port"
            ],
            "properties": {
              "port": {
                "type": "number",
                "description": "Port to use for Chrome remote debugging.",
                "default": 9222
              },
              "address": {
                "type": "string",
                "description": "TCP/IP address of debug port",
                "default": "127.0.0.1"
              },
              "sourceMaps": {
                "type": "boolean",
                "description": "Use JavaScript source maps (if they exist).",
                "default": true
              },
              "diagnosticLogging": {
                "type": "boolean",
                "description": "When true, the adapter logs its own diagnostic info to the console in a human readable format",
                "default": true
              },
              "verboseDiagnosticLogging": {
                "type": "boolean",
                "description": "When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')",
                "default": true
              },
              "url": {
                "type": "string",
                "description": "Will search for a tab with this EXACT url and attach to it, if found",
                "default": "http://localhost:8080"
              },
              "webRoot": {
                "type": "string",
                "description": "This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"",
                "default": "${workspaceRoot}"
              },
              "nwjsVersion": {
                "type": "string",
                "description": "Using NWjs version",
                "default": "any"
              },
              "pathMapping": {
                "type": "object",
                "description": "A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk",
                "default": {}
              },
              "sourceMapPathOverrides": {
                "type": "object",
                "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.",
                "default": {}
              },
              "smartStep": {
                "type": "boolean",
                "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                "default": true
              },
              "skipFiles": {
                "type": "array",
                "description": "An array of file or folder names, or path globs, to skip when debugging.",
                "default": []
              }
            }
          }
        }
      }
    ]
  }
}
